import type AnimationItem from './animation/AnimationItem';
import type { AnimationData, AnimationDirection, AnimationSettings, ExpressionsPlugin, Vector2 } from './types';
import { play, pause, togglePause, setSpeed, setDirection, stop, registerAnimation, resize, goToAndStop, destroy, freeze, unfreeze, setVolume, mute, unmute, getRegisteredAnimations, loadAnimation } from './animation/AnimationManager';
export declare function installPlugin(type: string, plugin: ExpressionsPlugin): void;
export declare function setSubframeRendering(flag: boolean): void;
declare const Lottie: {
    destroy: typeof destroy;
    freeze: typeof freeze;
    getRegisteredAnimations: typeof getRegisteredAnimations;
    goToAndStop: typeof goToAndStop;
    installPlugin: typeof installPlugin;
    loadAnimation: typeof loadAnimation;
    mute: typeof mute;
    pause: typeof pause;
    play: typeof play;
    registerAnimation: typeof registerAnimation;
    resize: typeof resize;
    setDirection: typeof setDirection;
    setIDPrefix: (value: string) => void;
    setLocationHref: (value: string) => void;
    setQuality: (value: string | number) => void;
    setSpeed: typeof setSpeed;
    setSubframeRendering: typeof setSubframeRendering;
    setVolume: typeof setVolume;
    stop: typeof stop;
    togglePause: typeof togglePause;
    unfreeze: typeof unfreeze;
    unmute: typeof unmute;
    useWebWorker: (flag: boolean) => void;
    version: string;
};
export type { AnimationItem, AnimationData, AnimationDirection, AnimationSettings, Vector2, };
export default Lottie;
