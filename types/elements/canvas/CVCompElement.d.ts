import type { CompElementInterface, ElementInterfaceIntersect, GlobalData, LottieLayer } from '@/types';
import CompElement from '@/elements/CompElement';
export default class CVCompElement extends CompElement {
    addPendingElement: any;
    buildAllItems: any;
    buildElementParenting: any;
    buildItem: any;
    canvasContext?: CanvasRenderingContext2D;
    checkLayers: any;
    checkPendingElements: any;
    clearCanvas: any;
    configAnimation: any;
    createAudio: any;
    createCamera: any;
    createContainerElements: any;
    createContent: any;
    createElements: any;
    createFootage: any;
    createImage: any;
    createItem: any;
    createNull: any;
    createRenderableComponents: any;
    createShape: any;
    createSolid: any;
    createText: any;
    ctxFill: any;
    ctxFillRect: any;
    ctxFillStyle: any;
    ctxLineCap: any;
    ctxLineJoin: any;
    ctxLineWidth: any;
    ctxMiterLimit: any;
    ctxOpacity: any;
    ctxStroke: any;
    ctxStrokeStyle: any;
    ctxTransform: any;
    exitLayer: any;
    getElementById: any;
    getElementByPath: any;
    hide: any;
    hideElement: any;
    includeLayers: any;
    initItems: any;
    initRendererElement: any;
    pendingElements: ElementInterfaceIntersect[];
    prepareLayer: any;
    renderFrame: any;
    reset: any;
    restore: any;
    save: any;
    searchExtraCompositions: any;
    setBlendMode: any;
    setProjectInterface: any;
    setupGlobalData: any;
    show: any;
    showElement: any;
    updateContainerSize: any;
    constructor(data: LottieLayer, globalData: GlobalData, comp: CompElementInterface);
    createComp(data: LottieLayer): CVCompElement;
    destroy(): void;
    renderInnerContent(): void;
}
