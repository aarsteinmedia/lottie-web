import type { ElementInterfaceIntersect, GlobalData, LottieLayer, TextSpan } from '@/types';
import type LetterProps from '@/utils/text/LetterProps';
import TextElement from '@/elements/TextElement';
export default class CVTextElement extends TextElement {
    canvasContext?: CanvasRenderingContext2D;
    clearCanvas: any;
    createContainerElements: any;
    createContent: any;
    createElements: any;
    createRenderableComponents: any;
    currentRender: unknown;
    destroy: any;
    exitLayer: any;
    fill?: boolean;
    fillColorAnim: boolean;
    hide: any;
    hideElement: any;
    initRendererElement: any;
    justifyOffset: number;
    prepareLayer: any;
    renderedLetters: LetterProps[];
    renderFrame: any;
    renderLocalTransform: any;
    renderRenderable: any;
    searchEffectTransforms: any;
    setBlendMode: any;
    show: any;
    showElement: any;
    stroke?: boolean;
    strokeColorAnim: boolean;
    strokeWidthAnim: boolean;
    textSpans: TextSpan[];
    tHelper: any;
    values: {
        fill: string;
        fValue: string;
        stroke: string;
        sWidth: number;
    };
    yOffset: number;
    constructor(data: LottieLayer, globalData: GlobalData, comp: ElementInterfaceIntersect);
    buildNewText(): void;
    renderInnerContent(): void;
}
